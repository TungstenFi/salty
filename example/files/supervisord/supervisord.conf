[supervisord]
logfile = /opt/log/supervisord.log
logfile_maxbytes = 0
logfile_backups = 0
loglevel = info
pidfile = /opt/data/run/supervisord.pid
nodaemon = true
minfds = ${1000000 if me['facts']['kernel'] == 'Linux' else 1024}
minprocs = 1024
umask = 022
user = root
identifier = supervisor
directory = /opt/data
nocleanup = true
childlogdir = /opt/log
strip_ansi = false
environment = PATH="/opt/ve/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

[unix_http_server]
file = /opt/data/run/supervisord.sock
chown = root:${'wheel' if me['facts']['kernel'] == 'Darwin' else 'root'}
chmod = 0770

; the below section must remain in the config file for RPC
; (supervisorctl/web interface) to work, additional interfaces may be
; added by defining them in separate rpcinterface: sections
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

; [ctlplugin:wildcards]
; supervisor.ctl_factory = supervisorwildcards.controllerplugin:make_wildcards_controllerplugin

[supervisorctl]
serverurl = unix:///opt/data/run/supervisord.sock
; username = bob
; password = 123
; prompt = mysupervisor

; [program:cat]
; command = /bin/cat
; process_name = %(program_name)s
; numprocs = 1
; directory = /tmp
; umask = 022
; priority = 999
; autostart = true
; autorestart = true
; startsecs = 3
; startretries = 3
; exitcodes = 0,2
; stopsignal = TERM
; stopwaitsecs = 10
; user =
; redirect_stderr = false
; stdout_logfile = /a/path
; stdout_logfile_maxbytes = 1MB
; stdout_logfile_backups = 10
; stdout_capture_maxbytes = 1MB
; stderr_logfile = /a/path
; stderr_logfile_maxbytes = 1MB
; stderr_logfile_backups = 10
; stderr_capture_maxbytes = 1MB
; environment = A="1",B="2"
; serverurl = AUTO

% if 'salty-server' in me['roles']:
[program:salty-master]
command = /opt/salty/salty.py server 0.0.0.0:11111
user = root
directory = /opt/salty/example
priority = 100
startsecs = 3
startretries = 10000000
exitcodes = 0
stopsignal = TERM
stopwaitsecs = 20
redirect_stderr = true
stdout_logfile = /opt/log/salty-server.log
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
% endif

[program:salty-client]
command = /opt/salty/salty.py client 127.0.0.1:11111 --id=${id} --path=tmp/${id}
user = root
directory = /opt/salty/example
priority = 100
startsecs = 3
startretries = 10000000
exitcodes = 0
stopsignal = TERM
stopwaitsecs = 20
redirect_stderr = true
stdout_logfile = /opt/log/salty-client.log
stdout_logfile_maxbytes = 0
stdout_logfile_backups = 0
